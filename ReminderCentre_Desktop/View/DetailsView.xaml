<Grid x:Class="ReminderCentre.View.DetailsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:xwtk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
      mc:Ignorable="d"
      x:Name="Grid"
      IsHitTestVisible="{Binding DetailsViewModel.IsHitTestVisible, Source={StaticResource Locator}}"
      Opacity="{Binding DetailsViewModel.Opacity, Source={StaticResource Locator}}">
    <Grid.DataContext>
        <Binding Path="DetailsViewModel" Source="{StaticResource Locator}"/>
    </Grid.DataContext>
    <!--Control Styles-->
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/DateTimePicker.xaml" />
				<ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/TextButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--Binding-->
            <!--RC_ListBoxItem.Style_TaskDetails_Original-->
            <Style TargetType="{x:Type ListBoxItem}" x:Key="RC_ListBoxItem.Style_TaskDetails_Original">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid x:Name="InnerGrid" Margin="0" Height="Auto" Background="{x:Null}" Width="auto" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel x:Name="StackPanel" Margin="0" Orientation="Vertical" Background="#FFFFFCCA" HorizontalAlignment="Left">
                                        <StackPanel x:Name="StackPanel_TaskHeader" Orientation="Horizontal" Margin="0" HorizontalAlignment="Left">
                                            <CheckBox x:Name="CheckBox" Style="{StaticResource RC_CheckBox.Style_Original}" IsChecked="{Binding IsFinished}" Margin="12,3,0,0" VerticalAlignment="Center" Padding="0" BorderThickness="0" HorizontalAlignment="Left"/>
                                            <xwtk:WatermarkTextBox Watermark="Task name" x:Name="TaskName" Focusable="True" Background="{x:Null}" BorderThickness="0" Width="400"	Margin="0,11" Padding="7,0,0,0" Text="{Binding TaskName, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" VerticalContentAlignment="Center" FontSize="21.333" Foreground="#FF515151" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <Path x:Name="Seperator" Data="M0,51 L488,51" HorizontalAlignment="Left" Height="1.001" Margin="-0.496,0,-0.498,0" Stretch="Fill" Stroke="LightGray" VerticalAlignment="Stretch" Width="441" Fill="{x:Null}" StrokeThickness="1"/>
                                        <StackPanel x:Name="StackPanel_Note" Margin="0" Orientation="Horizontal" Background="{x:Null}" HorizontalAlignment="Left">
                                            <Grid x:Name="NoteIcon" Margin="13,17,0,0" Width="15.739" HorizontalAlignment="Left" VerticalAlignment="Top" SnapsToDevicePixels="False">
                                                <Path Data="M1,1 L10.249667,1 14.625,5.2503333 14.625,15.25 1,15.25 z" Fill="#FF4193D8" HorizontalAlignment="Left" Height="17.511" Margin="0,-1.261,0,0" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="1" VerticalAlignment="Top" Width="15.625"/>
                                                <Path Data="M16.166667,45.25 L22.752109,45.25" Fill="White" HorizontalAlignment="Left" Height="1.078" Margin="2.083,3.324,0,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="7.585"/>
                                                <Path Data="M15.75,47.083333 L25.219615,47.083333" Fill="White" HorizontalAlignment="Left" Height="1.167" Margin="2.083,7.432,0,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="11.342" RenderTransformOrigin="0.5,0.5"/>
                                                <Path Data="M15.75,47.083333 L25.219615,47.083333" Fill="White" HorizontalAlignment="Left" Height="1.167" Margin="2.083,11.361,0,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="11.342" RenderTransformOrigin="0.5,0.5"/>
                                                <Path Data="M19.541274,48.319033 L20.913213,35.804519 30.226855,49.799767 z" Fill="#FF515151" HorizontalAlignment="Left" Height="5.945" Margin="10.144,-1.445,0,0" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Top" Width="5.029" RenderTransformOrigin="0.5,0.5" Visibility="Visible">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform AngleY="-0.415"/>
                                                            <RotateTransform Angle="-7.075"/>
                                                            <TranslateTransform X="0.17127486566988859" Y="-0.16487766935617731"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                            <xwtk:WatermarkTextBox Watermark="Note" x:Name="TaskNote" Background="{x:Null}" BorderThickness="0" Width="400" Text="{Binding TaskNote, UpdateSourceTrigger=PropertyChanged}" Margin="0,13" Padding="8,0,0,0" FontSize="16" Foreground="#FF515151" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Center" AcceptsReturn="True" TextWrapping="Wrap"/>
                                        </StackPanel>
                                        <Path x:Name="Seperator_Copy" Data="M0,51 L488,51" HorizontalAlignment="Left" Height="1.001" Margin="-0.496,0,-0.498,0" Stretch="Fill" Stroke="LightGray" VerticalAlignment="Stretch" Width="441" Fill="{x:Null}" StrokeThickness="1"/>
                                        <StackPanel x:Name="StackPanel_DueDate" Orientation="Horizontal" HorizontalAlignment="Left">
                                            <Grid x:Name="CalendarIcon" Height="Auto" Width="16.625" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="13,2,0,0" SnapsToDevicePixels="False">
                                                <Path Data="M4.2840043,0.083 L4.2840043,-3.0106226" Fill="#FF515151" HorizontalAlignment="Left" Height="4.177" Margin="2.846,-2.227,0,0" Stretch="Fill" Stroke="#FF515151" VerticalAlignment="Top" Width="1"/>
                                                <Path Data="M4.2840043,0.083 L4.2840043,-3.0106226" Fill="#FF515151" HorizontalAlignment="Left" Height="4.177" Margin="11.692,-2.227,0,0" Stretch="Fill" Stroke="#FF515151" VerticalAlignment="Top" Width="1"/>
                                                <Rectangle Fill="#FF4193D8" HorizontalAlignment="Left" Height="11.43" Margin="0.021,4.195,0,0" Stroke="#FF4193D8" StrokeThickness="1" VerticalAlignment="Top" Width="16.604"/>
                                                <Rectangle Fill="#FF515151" HorizontalAlignment="Left" Height="4.945" Margin="0.021,0.083,0,0" Stroke="{x:Null}" StrokeThickness="1" VerticalAlignment="Top" Width="16.604"/>
                                                <TextBlock HorizontalAlignment="Left" Height="14.935" Margin="3.481,3.159,-1.469,-2.469" TextWrapping="Wrap" VerticalAlignment="Top" Width="14.613" FontSize="9.333" Foreground="White"><Run Text="25"/><LineBreak/><Run/></TextBlock>
                                                <Path Data="M4.2840043,0.083 L4.2840043,-3.0106226" Fill="White" HorizontalAlignment="Left" Height="4.177" Margin="3.869,-2.227,0,0" Stretch="Fill" Stroke="White" VerticalAlignment="Top" Width="1"/>
                                                <Path Data="M4.2840043,0.083 L4.2840043,-3.0106226" Fill="White" HorizontalAlignment="Left" Height="4.177" Margin="12.653,-2.227,0,0" Stretch="Fill" Stroke="White" VerticalAlignment="Top" Width="1"/>
                                                <Path Data="M0.021,4.7509167 L16.150968,4.7509167" Fill="White" HorizontalAlignment="Left" Height="1" Margin="-0.505,4.03,-0.594,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="17.724"/>
                                            </Grid>
                                            <xwtk:DateTimePicker Value="{Binding DueDate, UpdateSourceTrigger=PropertyChanged}" x:Name="DateTimePicker" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="7,14,0,13" BorderThickness="0" Style="{DynamicResource RC_DateTimePicker.Style_Orignal}" Foreground="#FF515151"/>
                                        </StackPanel>
                                        <Path x:Name="Seperator_Copy1" Data="M0,51 L488,51" HorizontalAlignment="Left" Height="1.001" Margin="0,0,-0.994,0" Stretch="Fill" Stroke="LightGray" VerticalAlignment="Stretch" Width="440.5" Fill="{x:Null}" StrokeThickness="1"/>
                                        <StackPanel x:Name="StackPanel_Remind" Orientation="Horizontal" HorizontalAlignment="Left">
                                            <Grid x:Name="DueDayIcon1" Height="Auto" Width="16.625" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,2,0,0" SnapsToDevicePixels="False">
                                                <Path Data="M3.82875,1.1639167 C3.82875,1.1639167 3.82607,1.1600676 3.820835,1.1527697 3.6934885,0.97523847 2.2966824,-1.1791363 0.7034999,0.25758337 -1.0862434,1.87156 1.2032899,3.1944823 1.2032899,3.1944823" Fill="#FF515151" HorizontalAlignment="Left" Height="4.429" Margin="0.021,-0.234,0,0" Stretch="Fill" Stroke="#FF515151" StrokeThickness="1" VerticalAlignment="Top" Width="4.808"/>
                                                <Path Data="M3.82875,1.1639167 C3.82875,1.1639167 3.82607,1.1600676 3.820835,1.1527697 3.6934885,0.97523847 2.197451,-1.1007177 0.7034999,0.25758337 -1.0478024,1.8498683 1.2032899,3.1944823 1.2032899,3.1944823" Fill="#FF515151" HorizontalAlignment="Left" Height="4.378" Margin="10.884,-0.22,0,0" Stretch="Fill" Stroke="#FF515151" StrokeThickness="1" VerticalAlignment="Top" Width="4.773" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="-1"/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform X="-0.00099999999999944578"/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Ellipse Fill="#FF4193D8" HorizontalAlignment="Left" Height="15.625" Margin="0" Stroke="#FF4193D8" StrokeThickness="1" VerticalAlignment="Top" Width="15.625"/>
                                                <Path Data="M7.5625,3.5321667 L7.5625,8.2821667" Fill="{x:Null}" HorizontalAlignment="Left" Height="5.75" Margin="7.541,3.094,0,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="2"/>
                                                <Path Data="M7.5625,3.5321667 L7.5625,8.2821667" Fill="{x:Null}" HorizontalAlignment="Left" Height="5.75" Margin="5.667,5.156,0,0" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Top" Width="1" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform Angle="-90"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Grid>
                                            <Label Content="Remind me:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="7,14,0,13" Padding="0" Foreground="Gray"/>
                                            <ComboBox x:Name="RemindComBox" Text="{Binding RemindTimeStr}" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="3,0,0,0" HorizontalContentAlignment="Stretch" Grid.IsSharedSizeScope="True" Style="{DynamicResource RC_ComboBox.Style_Original}">
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="None"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="At time of event"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="15 minutes before"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="30 minutes before"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="1 hour before"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="2 hours before"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="1 day before"/>
                                                <ComboBoxItem Style="{DynamicResource RC_ComboBoxItem.Style_Original}" Content="2 days before"/>
                                            </ComboBox>
                                        </StackPanel>
                                        <Path x:Name="Seperator_Copy2" Data="M0,51 L488,51" HorizontalAlignment="Left" Height="1.001" Margin="0,0,-0.994,12" Stretch="Fill" Stroke="LightGray" VerticalAlignment="Stretch" Width="440.5" Fill="{x:Null}" StrokeThickness="1"/>
                                        <ListBox SelectedValue="{Binding DetailsViewModel.SelectedSubtask, Source={StaticResource Locator}}" SelectedIndex="{Binding DetailsViewModel.SelectedIndex, Source={StaticResource Locator}}" ItemsSource="{Binding SubtaskList}" ItemContainerStyle="{DynamicResource RC_ListBox.ItemContainerStyle_InnerTextBoxVer_Original}" ItemTemplate="{DynamicResource RC_ListBox.ItemTemplate_SubTask_Original}" x:Name="SubTaskList" Style="{DynamicResource RC_ListBox.Style_Original}" Margin="10,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <ListBoxItem x:Name="AddSubtask" Margin="10,0,10,12" Style="{DynamicResource RC_ListBoxItem.Style_AddSubtask_Original}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=TaskName}" Value="True">
                                    <Setter Property="Selector.IsSelected" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=TaskNote}" Value="True">
                                    <Setter Property="Selector.IsSelected" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=CheckBox}" Value="True">
                                    <Setter Property="Selector.IsSelected" Value="True"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Binding-->
            <!--RC_ListBox.ItemTemplate_SubTask_Original-->
            <DataTemplate x:Key="RC_ListBox.ItemTemplate_SubTask_Original" DataType="{x:Type ListBox}">
                <Grid x:Name="Grid" Height="Auto" Background="{x:Null}">
                    <StackPanel x:Name="StackPanel" Orientation="Horizontal" Width="420" HorizontalAlignment="Left" VerticalAlignment="Top" Background="White" Margin="0,0,0,2">
                    	<CheckBox x:Name="CheckBox" Style="{StaticResource RC_CheckBox.Style_Original}" IsChecked="{Binding IsFinished}" Margin="12,3,0,0" VerticalAlignment="Center" Padding="0" BorderThickness="0">
                    		<i:Interaction.Triggers>
                    			<i:EventTrigger EventName="Checked">
                    				<cmd:EventToCommand Command="{Binding DetailsViewModel.FinishSubtaskCommand, Source={StaticResource Locator}}" />
                    			</i:EventTrigger>
                    		</i:Interaction.Triggers>
                    	</CheckBox>
                    	<xwtk:WatermarkTextBox Watermark="Subtask Name" BorderThickness="0" x:Name="TaskName" Background="{x:Null}" Width="352"	Margin="0,11" Padding="9,0,0,0" Text="{Binding SubtaskName, UpdateSourceTrigger=PropertyChanged}" FontSize="18.667" Foreground="#FF515151" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    	<Button x:Name="DeleteButton" Style="{StaticResource RC_Button.Style_TextButton_Original}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" Visibility="Hidden" Margin="5,0,0,0" ToolTip="Delete this subtask">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding DetailsViewModel.DeleteSubtaskCommand, Source={StaticResource Locator}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid Background="Transparent" Margin="1,0,0,0">
                    			<Grid x:Name="X" Margin="0,2,5,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Center">
                    				<Grid.RenderTransform>
                    					<TransformGroup>
                    						<ScaleTransform ScaleX="1"/>
                    						<SkewTransform/>
                    						<RotateTransform/>
                    						<TranslateTransform/>
                    					</TransformGroup>
                    				</Grid.RenderTransform>
                    				<Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FFACACAC" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                    					<Path.RenderTransform>
                    						<TransformGroup>
                    							<ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                    							<SkewTransform/>
                    							<RotateTransform/>
                    							<TranslateTransform/>
                    						</TransformGroup>
                    					</Path.RenderTransform>
                    				</Path>
                    				<Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FFACACAC" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                    					<Path.RenderTransform>
                    						<TransformGroup>
                    							<ScaleTransform ScaleY="0.5" ScaleX="-0.5"/>
                    							<SkewTransform AngleY="0" AngleX="0"/>
                    							<RotateTransform Angle="0"/>
                    							<TranslateTransform/>
                    						</TransformGroup>
                    					</Path.RenderTransform>
                    				</Path>
                    			</Grid>
                    		</Grid>
						</Button>
                    </StackPanel>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="StackPanel" Value="#FFF3EEFF"/>
						<Setter Property="Visibility" TargetName="DeleteButton" Value="Visible"/>
                    </Trigger>
					<DataTrigger
                        Binding="{Binding IsFocused, ElementName=TaskName}" Value="True">
                        <Setter Property="Background" TargetName="StackPanel" Value="#FFDADDFF"/>
						<Setter Property="Visibility" TargetName="DeleteButton" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <!--RC_ListBoxItem.Style_AddSubtask_Original-->
            <Style x:Key="RC_ListBoxItem.Style_AddSubtask_Original" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid x:Name="Grid" Height="Auto" Background="{x:Null}">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <StackPanel x:Name="StackPanel" Orientation="Horizontal" Width="420" HorizontalAlignment="Left" VerticalAlignment="Top" Background="White" Margin="0,0,0,2">
                                        <Button x:Name="Add" Margin="0" VerticalAlignment="Stretch" Padding="0" BorderThickness="0" Width="29" Height="Auto" Style="{DynamicResource RC_Button.Style_AddSubtask_Original}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <cmd:EventToCommand Command="{Binding DetailsViewModel.AddSubtaskCommand, Source={StaticResource Locator}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <xwtk:WatermarkTextBox BorderThickness="0" x:Name="TaskName" Text="{Binding DetailsViewModel.NewSubtaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Locator}}"  Background="{x:Null}" Width="370"	Margin="0,11" Padding="10,0,0,0" Watermark="Add a subtask" FontSize="18.667" Foreground="#FF515151" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="KeyDown">
                                                    <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding DetailsViewModel.AddSubtask_EnterKeyCommand, Source={StaticResource Locator}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </xwtk:WatermarkTextBox>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="StackPanel" Value="#FFF3EEFF"/>
                                </MultiTrigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="StackPanel" Value="#FFDADDFF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--RC_Button.Style_AddSubtask_Original-->
            <Style x:Key="RC_Button.Style_AddSubtask_Original" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" Height="Auto" Margin="1.25,-0.25,-3.25,-0.75" VerticalAlignment="Stretch" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="23*"/>
                                    <RowDefinition Height="19*"/>
                                    <RowDefinition Height="19*"/>
                                    <RowDefinition Height="19*"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates1">
                                        <VisualState x:Name="Normal1"/>
                                        <VisualState x:Name="MouseOver1">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed1">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled1"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF757575"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF757575"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid Grid.ColumnSpan="3" Margin="4.583,10.192,4.4,0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
                            		<Path x:Name="path" Data="M0.13992306,-0.16666667 L12.181,-0.16666667" Fill="#FF4193D8" HorizontalAlignment="Left" Height="1.167" Margin="1.085,0,0,0" Stretch="None" StrokeThickness="2" VerticalAlignment="Top" Width="13.181" Stroke="#FF4193D8" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="1"/>
                            		<Path x:Name="path1" Data="M0.13992306,-0.16666667 L12.181,-0.16666667" Fill="#FF4193D8" HorizontalAlignment="Left" Height="1.167" Margin="0" Stretch="None" StrokeThickness="2" VerticalAlignment="Top" Width="13.181" Stroke="#FF4193D8" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="1" RenderTransformOrigin="0.5,0.5">
                            			<Path.RenderTransform>
                            				<TransformGroup>
                            					<ScaleTransform/>
                            					<SkewTransform/>
                            					<RotateTransform Angle="90"/>
                            					<TranslateTransform/>
                            				</TransformGroup>
                            			</Path.RenderTransform>
                            		</Path>
                            	</Grid>
                            	<Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Grid.Resources>
    <!--DataContext-->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
	<Grid.RowDefinitions>
		<RowDefinition Height="41"/>
		<RowDefinition Height="*"/>
	</Grid.RowDefinitions>
    <!--Task Details-->
    <Grid x:Name="TopBar">
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="*"/>
    		<ColumnDefinition Width="127"/>
    	</Grid.ColumnDefinitions>
		<Label Content="Task Details" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="26.667" Padding="0,0,5,5" Foreground="#FF515151"/>
		<Button Style="{StaticResource RC_Button.Style_TextButton_Original}" Grid.Column="1" Margin="0" Foreground="#FFBCBCBC" Background="{x:Null}" BorderBrush="{x:Null}" Padding="0">
            <Button.Content>
                <Grid x:Name="ContentForButton" Margin="0,7,0,0">
                	<Grid.ColumnDefinitions>
                		<ColumnDefinition Width="25"/>
                		<ColumnDefinition Width="*"/>
                	</Grid.ColumnDefinitions>
			<Grid x:Name="X" Margin="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" VerticalAlignment="Center">
				<Grid.RenderTransform>
					<TransformGroup>
						<ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Grid.RenderTransform>
                		<Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF78A9FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                			<Path.RenderTransform>
                				<TransformGroup>
                					<ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                					<SkewTransform/>
                					<RotateTransform/>
                					<TranslateTransform/>
                				</TransformGroup>
                			</Path.RenderTransform>
                		</Path>
                		<Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF78A9FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                			<Path.RenderTransform>
                				<TransformGroup>
                					<ScaleTransform ScaleY="0.5" ScaleX="-0.5"/>
                					<SkewTransform AngleY="0" AngleX="0"/>
                					<RotateTransform Angle="0"/>
                					<TranslateTransform/>
                				</TransformGroup>
                			</Path.RenderTransform>
                		</Path>
                	</Grid>
                	<Label Content="Delete this task" HorizontalAlignment="Left" Grid.Column="1" Padding="0" Foreground="#FFACACAC" VerticalContentAlignment="Center"/>
		</Grid>
            </Button.Content>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <cmd:EventToCommand Command="{Binding DetailsViewModel.DeleteTaskCommand, Source={StaticResource Locator}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
	</Grid>
    <ScrollViewer x:Name="ScrollViewer_TaskDetails" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalScrollBarVisibility="Hidden" Template="{DynamicResource RC_ScrollViewer.ControlTemplate_Original}" VerticalContentAlignment="Top" VerticalScrollBarVisibility="Auto" Margin="0,0,0,-0.001" Grid.Row="1">
        <ListBoxItem x:Name="TaskDetails" DataContext="{Binding DetailsViewModel.SelectedTask, Source={StaticResource Locator}}" Style="{DynamicResource RC_ListBoxItem.Style_TaskDetails_Original}"/>
    </ScrollViewer>
</Grid>