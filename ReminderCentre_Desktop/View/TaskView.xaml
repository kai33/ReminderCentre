<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:view="clr-namespace:ReminderCentre.View"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:xwtk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
      xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
      mc:Ignorable="d"
      x:Class="ReminderCentre.View.TaskView"
      x:Name="Grid">
    <!--Control Styles-->
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/TabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/TextButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ReminderCentre;component/Styles/Theme.Original/ScrollViewer.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--Binding-->
            <!--RC_ListBoxItem.Style_FilterItem_Original-->
            <Style x:Key="RC_ListBoxItem.Style_FilterTaskBar_Original" TargetType="{x:Type ListBoxItem}">
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ListBoxItem}">
            				<StackPanel Orientation="Vertical" Width="Auto" Height="Auto">
            					<Border x:Name="border" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" MinWidth="0" BorderBrush="#FF68A2D3" Padding="0" Background="{x:Null}" BorderThickness="1" SnapsToDevicePixels="True">
            						<Grid>
            							<Grid.ColumnDefinitions>
            								<ColumnDefinition Width="*"/>
            								<ColumnDefinition Width="40"/>
            							</Grid.ColumnDefinitions>
            							<xwtk:WatermarkTextBox Watermark="FILTER TASKS" BorderThickness="0" x:Name="FilterTaskTextBox" Background="{x:Null}" Margin="0,0,0,-0.001" Padding="11,3,0,4" Text="{Binding TaskViewModel.FilterStr, Mode=TwoWay, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" FontSize="16" Foreground="Gray" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" Width="Auto" SelectionBrush="#FF68A2D3" HorizontalAlignment="Stretch">
            								<xwtk:WatermarkTextBox.WatermarkTemplate>
            									<DataTemplate>
            										<ContentControl Content="{Binding}" Foreground="#BDBDBD" />
            									</DataTemplate>
            								</xwtk:WatermarkTextBox.WatermarkTemplate>
            								<i:Interaction.Triggers>
            									<i:EventTrigger EventName="TextChanged">
            										<cmd:EventToCommand Command="{Binding TaskViewModel.FilterTaskCommand, Source={StaticResource Locator}}" />
            									</i:EventTrigger>
            								</i:Interaction.Triggers>
            							</xwtk:WatermarkTextBox>
            							<Button x:Name="ClearButton" Grid.ColumnSpan="1" Grid.Column="1" Style="{DynamicResource RC_Button.Style_ClearButton_Original}" Foreground="#FF787878" Padding="1" ToolTip="Clear the filter bar"><i:Interaction.Triggers>
            									<i:EventTrigger EventName="Click">
            										<cmd:EventToCommand Command="{Binding TaskViewModel.ClearFilterCommand, Source={StaticResource Locator}}" />
            									</i:EventTrigger>
            								</i:Interaction.Triggers>Clear</Button>
            						</Grid>
            					</Border>
            				</StackPanel>
            				<ControlTemplate.Triggers>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="Selector.IsSelected" Value="False"/>
            							<Condition Property="IsMouseOver" Value="True"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="BorderBrush" TargetName="border" Value="#515151"/>
            					</MultiTrigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <!--RC_Button.Style_ClearButton_Original-->
            <Style x:Key="RC_Button.Style_ClearButton_Original" TargetType="{x:Type Button}">
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid x:Name="grid" Margin="0" Background="Transparent">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid">
            										<DiscreteObjectKeyFrame KeyTime="0">
            											<DiscreteObjectKeyFrame.Value>
            												<SolidColorBrush Color="#FFEDEDED"/>
            											</DiscreteObjectKeyFrame.Value>
            										</DiscreteObjectKeyFrame>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid">
            										<DiscreteObjectKeyFrame KeyTime="0">
            											<DiscreteObjectKeyFrame.Value>
            												<SolidColorBrush Color="#FFEDEDED"/>
            											</DiscreteObjectKeyFrame.Value>
            										</DiscreteObjectKeyFrame>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            				</Grid>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <!--RC_ListBox.ItemTemplate_TaskList_Original-->
            <DataTemplate x:Key="RC_ListBox.ItemTemplate_TaskList_Original" DataType="ListBox">
            	<StackPanel SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
            		<Grid SnapsToDevicePixels="True" x:Name="Grid" Margin="0,0,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFEDEDED">
            			<Grid.ColumnDefinitions>
            				<ColumnDefinition Width="30"/>
            				<ColumnDefinition Width="*"/>
            				<ColumnDefinition Width="20"/>
            			</Grid.ColumnDefinitions>
            			<CheckBox x:Name="CheckBox" Style="{StaticResource RC_CheckBox.Style_Original}" IsChecked="{Binding IsFinished}" Margin="12,18.186,0,15.185" VerticalAlignment="Center" Padding="0" BorderThickness="0" Grid.ColumnSpan="1"/>
            			<TextBlock x:Name="TaskName" Background="{x:Null}" Width="Auto"	Margin="0,11,0,10.998" Padding="9,0,0,0" Text="{Binding TaskName}" FontSize="21.333" Foreground="#FF515151" HorizontalAlignment="Left" VerticalAlignment="Center" MinWidth="0" Grid.ColumnSpan="1" Grid.Column="1"/>
            		</Grid>
            	</StackPanel>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="Grid" Value="#FFF3EEFF"/>
                    </Trigger>
                    <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                        <Setter Property="Background" TargetName="Grid" Value="#FFDADDFF"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <!--RC_ListBoxItem.Style_AddTaskBar_Original-->
            <Style x:Key="RC_ListBoxItem.Style_AddTaskBar_Original" TargetType="{x:Type ListBoxItem}">
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ListBoxItem}">
            				<StackPanel Orientation="Vertical" Width="Auto" Height="51.373">
            					<Border x:Name="border" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0" MinWidth="0" BorderBrush="{x:Null}" Padding="0" Background="#FF68A2D3">
            						<Grid>
            							<Grid.ColumnDefinitions>
            								<ColumnDefinition Width="30"/>
            								<ColumnDefinition Width="*"/>
            								<ColumnDefinition Width="35"/>
            							</Grid.ColumnDefinitions>
            							<Button x:Name="Add" Margin="0" VerticalAlignment="Stretch" Padding="0" BorderThickness="0" Width="30" Height="Auto" Style="{DynamicResource RC_Button.Style_AddTaskBar_Original}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
            								<i:Interaction.Triggers>
            									<i:EventTrigger EventName="Click">
            										<cmd:EventToCommand Command="{Binding TaskViewModel.AddTaskCommand, Source={StaticResource Locator}}" />
            									</i:EventTrigger>
            								</i:Interaction.Triggers>
            							</Button>
            							<xwtk:WatermarkTextBox Watermark="Add a new task" BorderThickness="0" x:Name="TaskName" Background="{x:Null}"	Margin="0,11,0,0" Padding="9,0,0,0" Text="{Binding TaskViewModel.NewTaskName, Mode=TwoWay, Source={StaticResource Locator}, UpdateSourceTrigger=PropertyChanged}" FontSize="21.333" Foreground="White" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" BorderBrush="{x:Null}" MinWidth="0" Width="Auto" SelectionBrush="White" Grid.Column="1" UseLayoutRounding="False">
            								<xwtk:WatermarkTextBox.WatermarkTemplate>
            									<DataTemplate>
            										<ContentControl Content="{Binding}" Foreground="#fff" />
            									</DataTemplate>
            								</xwtk:WatermarkTextBox.WatermarkTemplate>
            								<i:Interaction.Triggers>
            									<i:EventTrigger EventName="KeyDown">
            										<cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding TaskViewModel.AddTask_EnterKeyCommand, Source={StaticResource Locator}}" />
            									</i:EventTrigger>
            								</i:Interaction.Triggers>
            							</xwtk:WatermarkTextBox>
            						</Grid>
            					</Border>
            				</StackPanel>
            				<ControlTemplate.Triggers>
            					<MultiTrigger>
            						<MultiTrigger.Conditions>
            							<Condition Property="Selector.IsSelected" Value="False"/>
            							<Condition Property="IsMouseOver" Value="True"/>
            						</MultiTrigger.Conditions>
            						<Setter Property="Background" TargetName="border" Value="#FF71ABDC"/>
            					</MultiTrigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <!--RC_Button.Style_AddTaskBar_Original-->
            <Style x:Key="RC_Button.Style_AddTaskBar_Original" TargetType="{x:Type Button}">
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid Background="Transparent" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" Height="50" Margin="0" VerticalAlignment="Stretch" Width="Auto">
            					<Grid.ColumnDefinitions>
            						<ColumnDefinition Width="20*"/>
            						<ColumnDefinition Width="20*"/>
            						<ColumnDefinition Width="20*"/>
            						<ColumnDefinition Width="20*"/>
            					</Grid.ColumnDefinitions>
            					<Grid.RowDefinitions>
            						<RowDefinition Height="23*"/>
            						<RowDefinition Height="19*"/>
            						<RowDefinition Height="19*"/>
            						<RowDefinition Height="19*"/>
            					</Grid.RowDefinitions>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path_Copy">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path_Copy">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF515151"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF757575"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path_Copy">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF757575"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path_Copy">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Grid Grid.ColumnSpan="3" Margin="5.139,11.463,0,8.165" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1">
            						<Path x:Name="path" Data="M-0.0006154043,-0.16666667 L14.008,-0.16666667" Fill="White" HorizontalAlignment="Left" Height="3" Margin="2.353,1.121,0,0" Stretch="None" StrokeThickness="3" VerticalAlignment="Top" Width="15.008" Stroke="White" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="1"/>
            						<Path x:Name="path_Copy" Data="M-0.0006154043,-0.16666667 L14.008,-0.16666667" Fill="White" HorizontalAlignment="Left" Height="3" Margin="0" Stretch="None" StrokeThickness="3" VerticalAlignment="Top" Width="15.007" Stroke="White" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="1" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform Angle="90"/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            					</Grid>
            					<Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
            				</Grid>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
			<DataTemplate x:Key="RC_TabControl.ItemTemplate_NormalMode_Original" DataType="{x:Type TabControl}">
                <Grid Width="Auto" Background="White" Height="Auto" Margin="0,2.8,0,3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding TaskViewModel.EditCategory_DoubleClick_Command, Source={StaticResource Locator}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="31"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="root" Content="{Binding CategoryName}" FontSize="26.67" Padding="12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3">
                    </Label>
                    <Label x:Name="count" Content="{Binding TaskList.Count}" Visibility="{Binding TaskList.Count, Converter={StaticResource IntToVisibilityConverter}}"  Grid.Column="1" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF999999" Margin="0"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger
                Binding="{Binding
                        RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type TabItem}},
                        Path=IsMouseOver}" Value="True">
                        <Setter  TargetName="root" Property="Foreground" Value="#515151"/>
                    </DataTrigger>
                    <DataTrigger
                Binding="{Binding
                        RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type TabItem}},
                        Path=IsSelected}" Value="True">
                        <Setter TargetName="root" Property="Foreground" Value="#4193D8"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="RC_TabControl.ItemTemplate_EditMode_Original" DataType="{x:Type TabControl}">
                <Grid Width="auto" Background="White" Margin="0,2.8,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="31"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="root" Text="{Binding CategoryName}" FontSize="26.67" Padding="10,0,12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3" BorderBrush="{x:Null}" BorderThickness="1" Style="{DynamicResource RC_TextBox.Style_Original}" Height="Auto">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyDown">
                                <cmd:EventToCommand PassEventArgsToCommand="True"  Command="{Binding TaskViewModel.EditCategory_Key_Command, Source={StaticResource Locator}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <Button x:Name="DeleteButton" Style="{StaticResource RC_Button.Style_TextButton_Original}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="{x:Null}" ToolTip="Delete this category" Grid.Column="1" Padding="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cmd:EventToCommand CommandParameter="{Binding Index}" Command="{Binding TaskViewModel.DeleteCategoryCommand, Source={StaticResource Locator}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid Background="Transparent">
                            <Grid x:Name="X" Margin="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="0.5" ScaleX="-0.5"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger
        				Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type TabItem}, Mode=FindAncestor}}" Value="True">
                        <Setter  TargetName="root" Property="Foreground" Value="#515151"/>
                    </DataTrigger>
                    <DataTrigger
        				Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}, Mode=FindAncestor}}" Value="True">
                        <Setter TargetName="root" Property="Foreground" Value="#4193D8"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <Style x:Key="RC_TabControl.Style_NormalMode_Original" TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate >
                            <Grid Width="auto" Background="White" Height="auto" Margin="0,2.8,0,3">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding TaskViewModel.EditCategory_DoubleClick_Command, Source={StaticResource Locator}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="31"/>
                                </Grid.ColumnDefinitions>
                                <Label x:Name="root" Content="{Binding CategoryName}" FontSize="26.67" Padding="12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3">
                                </Label>
                                <Label x:Name="count" Content="{Binding TaskList.Count}" Visibility="{Binding TaskList.Count, Converter={StaticResource IntToVisibilityConverter}}" Grid.Column="1" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF999999" Margin="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter  TargetName="root" Property="Foreground" Value="#515151"/>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter TargetName="root" Property="Foreground" Value="#4193D8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RC_TabControl.Style_DisableMode_Original" TargetType="{x:Type TabItem}">
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Width="auto" Background="White" Height="auto" Margin="0,2.8,0,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="31"/>
                                </Grid.ColumnDefinitions>
                                <Label x:Name="root" Content="{Binding CategoryName}" FontSize="26.67" Padding="12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3" />
                                <Label x:Name="count" Content="{Binding TaskList.Count}" Visibility="{Binding TaskList.Count, Converter={StaticResource IntToVisibilityConverter}}" Grid.Column="1" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF999999" Margin="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter  TargetName="root" Property="Foreground" Value="#515151"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RC_TabControl.Style_EditMode_Original" TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Width="auto" Background="White" Margin="0,2.8,0,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="31"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="root" Text="{Binding CategoryName, UpdateSourceTrigger=PropertyChanged}" FontSize="26.67" Padding="10,0,12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3" BorderBrush="{x:Null}" BorderThickness="1" Style="{DynamicResource RC_TextBox.Style_Original}" Height="Auto">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyDown">
                                            <cmd:EventToCommand PassEventArgsToCommand="True"  Command="{Binding TaskViewModel.EditCategory_Key_Command, Source={StaticResource Locator}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <Button x:Name="DeleteButton" Style="{StaticResource RC_Button.Style_TextButton_Original}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="{x:Null}" ToolTip="Delete this category" Grid.Column="1" Padding="0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cmd:EventToCommand CommandParameter="{Binding Index}" Command="{Binding TaskViewModel.DeleteCategoryCommand, Source={StaticResource Locator}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid Background="Transparent">
                                        <Grid x:Name="X" Margin="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Grid.RenderTransform>
                                            <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                            <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="0.5" ScaleX="-0.5"/>
                                                        <SkewTransform AngleY="0" AngleX="0"/>
                                                        <RotateTransform Angle="0"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="root" Property="Foreground" Value="#515151"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RC_TabControl.Style_NewItemMode_Original" TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Width="auto" Background="White" Margin="0,2.8,0,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="31"/>
                                </Grid.ColumnDefinitions>
                                <TextBox FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" SelectionStart="0" SelectionLength="7" x:Name="root" Text="{Binding CategoryName, UpdateSourceTrigger=PropertyChanged}" FontSize="26.67" Padding="10,0,12,0" Background="{x:Null}" Margin="0" Grid.ColumnSpan="1" Foreground="#FFa3a3a3" BorderBrush="{x:Null}" BorderThickness="1" Style="{DynamicResource RC_TextBox.Style_Original}" Height="Auto">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyDown">
                                            <cmd:EventToCommand PassEventArgsToCommand="True"  Command="{Binding TaskViewModel.EditCategory_Key_Command, Source={StaticResource Locator}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <Button x:Name="DeleteButton" Style="{StaticResource RC_Button.Style_TextButton_Original}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="{x:Null}" ToolTip="Delete this category" Grid.Column="1" Padding="0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cmd:EventToCommand CommandParameter="{Binding Index}" Command="{Binding TaskViewModel.DeleteCategoryCommand, Source={StaticResource Locator}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid Background="Transparent">
                                        <Grid x:Name="X" Margin="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1"/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Grid.RenderTransform>
                                            <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                            <Path Data="M5.1666667,6.3333333 L29.5,29.166667" HorizontalAlignment="Center" Height="25.834" Margin="0" Stretch="Fill" Stroke="#FF8CB5FF" StrokeThickness="4" VerticalAlignment="Center" Width="24.888" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="False">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="0.5" ScaleX="-0.5"/>
                                                        <SkewTransform AngleY="0" AngleX="0"/>
                                                        <RotateTransform Angle="0"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="root" Property="Foreground" Value="#515151"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="TextBoxBorder" StartPoint="0,0" MappingMode="Absolute" EndPoint="0,20">
        		<GradientStop Color="#ABADB3" Offset="0.05"/>
        		<GradientStop Color="#E2E3EA" Offset="0.07"/>
        		<GradientStop Color="#E3E9EF" Offset="1"/>
        	</LinearGradientBrush>
        	<Style x:Key="RC_TextBox.Style_Original" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="FocusStates">
        								<VisualState x:Name="Unfocused"/>
        								<VisualState x:Name="Focused">
        									<Storyboard>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="rectangle">
        											<DiscreteObjectKeyFrame KeyTime="0">
        												<DiscreteObjectKeyFrame.Value>
        													<SolidColorBrush Color="#FF787878"/>
        												</DiscreteObjectKeyFrame.Value>
        											</DiscreteObjectKeyFrame>
        										</ObjectAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						<Rectangle x:Name="rectangle" Stroke="#FFBCBCBC" Height="35"/>
        					</Grid>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        </ResourceDictionary>
    </Grid.Resources>
    <!--DataContext-->
    <Grid.DataContext>
        <Binding Path="TaskViewModel" Source="{StaticResource Locator}"/>
    </Grid.DataContext>
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!---->
    <!--Tab Region-->
	<TabControl x:Name="TabControl" ItemsSource="{Binding TaskData}" SelectedValue="{Binding SelectedCategory}" VerticalAlignment="Top" TabStripPlacement="Left" ItemContainerStyle="{StaticResource RC_TabControl.ItemContainerStyle_Original}" Style="{DynamicResource RC_TabControl.Style_Original}" Padding="0" ScrollViewer.VerticalScrollBarVisibility="Hidden" HorizontalContentAlignment="Stretch" ItemTemplate="{DynamicResource RC_TabControl.ItemTemplate_NormalMode_Original}">
		<!--ContentTemplate for Tasklist and TaskDetails-->
		<TabControl.ContentTemplate>
			<DataTemplate>
				<Grid Background="{x:Null}" HorizontalAlignment="Stretch" Margin="0">
					<Grid.RowDefinitions>
						<!--For Filter Bar-->
						<RowDefinition Height="44"/>
						<!--For Add Task Bar-->
						<RowDefinition Height="52"/>
						<!--For List-->
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<!--For Task List-->
						<ColumnDefinition Width="*" MinWidth="386"/>
						<!--For Task Details-->
						<ColumnDefinition Width="485"/>
					</Grid.ColumnDefinitions>
                    <!--Filter Task Bar-->
					<Grid x:Name="Filter" Margin="0,0,0,1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<!--Width hack for ScrollViewer-->
							<ColumnDefinition Width="5"/>
						</Grid.ColumnDefinitions>
						<ListBoxItem x:Name="FilterTaskBar" 
							Style="{DynamicResource RC_ListBoxItem.Style_FilterTaskBar_Original}" Padding="2,0,0,0" VerticalAlignment="Top"/>
					</Grid>
                    <!--Add Task Bar-->
					<Grid x:Name="AddTaskGrid" Margin="0,0,0,1" Grid.Row="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<!--Width hack for ScrollViewer-->
							<ColumnDefinition Width="5"/>
						</Grid.ColumnDefinitions>
						<ListBoxItem x:Name="AddTaskBar" 
							Style="{DynamicResource RC_ListBoxItem.Style_AddTaskBar_Original}" Padding="2,0,0,0" VerticalAlignment="Top"/>
					</Grid>
                    <!--Task List-->
					<ScrollViewer x:Name="ScrollViewer_List" 
						Template="{DynamicResource RC_ScrollViewer.ControlTemplate_Original}" VerticalContentAlignment="Stretch" UseLayoutRounding="False" Margin="0" Grid.Row="2" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto">
						<ListBox x:Name="List"
							ItemsSource="{Binding TaskList}" SelectedIndex="{Binding TaskViewModel.SelectedIndex, Source={StaticResource Locator}}" SelectedValue="{Binding TaskViewModel.SelectedTask, Source={StaticResource Locator}}" ItemTemplate="{StaticResource RC_ListBox.ItemTemplate_TaskList_Original}" ItemContainerStyle="{StaticResource RC_ListBox.ItemContainerStyle_Original}" Style="{DynamicResource RC_ListBox.Style_Original}" HorizontalContentAlignment="Stretch" MinWidth="0" HorizontalAlignment="Stretch"/>
					</ScrollViewer>
					<view:DetailsView HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Margin="25,0,0,0" Grid.RowSpan="3"/>
				</Grid>
			</DataTemplate>
		</TabControl.ContentTemplate>
	</TabControl>
	<Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0" Height="30" Width="200">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="33"/>
			<ColumnDefinition Width="1"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Button Style="{StaticResource RC_Button.Style_TextButton_Original}" Foreground="White" Width="33" Content="Add" ToolTip="Add a new category" Margin="0" Background="#FFA4A4A4" BorderBrush="{x:Null}">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Click">
					<cmd:EventToCommand Command="{Binding TaskViewModel.AddCategoryCommand, Source={StaticResource Locator}}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
		<Path x:Name="Seperator" Data="M49.226667,0 L50.226667,35" Stretch="Fill" VerticalAlignment="Top" Width="1" Stroke="White" SnapsToDevicePixels="True" Height="25" Margin="0,5,0,0" Fill="White" RenderTransformOrigin="0.5,0.5" Grid.Column="1">
			<Path.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleY="1.46"/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Path.RenderTransform>
		</Path>
		<Button x:Name="TabManagementToggle" Style="{DynamicResource RC_Button.Style_TextButton_Original}" Background="#FFA4A4A4" BorderBrush="{x:Null}" Foreground="White" Content="Edit category" ToolTip="Edit the category" Padding="5,0,0,0" Grid.Column="2" Margin="0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Click">
					<cmd:EventToCommand Command="{Binding TaskViewModel.EditCategoryCommand, Source={StaticResource Locator}}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</Button>
	</Grid>
    <!--Tabs Management Button-->
</Grid>
